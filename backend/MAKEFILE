CC = g++

DEBUG = DEBUG
SOURCES_DIR = src
SOURCES = $(wildcard $(SOURCES_DIR)/*.cpp)
HEADERS_DIR = headers

LIBS_DIR = ../libs

LIBS = $(LIBS_DIR)/headers
LIBS_SRC = $(wildcard $(LIBS_DIR)/src/*.cpp)
DSL = $(LIBS_DIR)/DSL

BUILD_DIR = build
OBJ_DIR = obj
OBJECTS = $(wildcard $(OBJ_DIR)/*.o)
EXECUTABLE = elden_backend

all: $(SOURCES) $(BUILD_DIR)
	$(CC) $(SOURCES) -o $(BUILD_DIR)/$(EXECUTABLE) -I$(HEADERS_DIR) -D$(DEBUG)

setup:
	mkdir $(BUILD_DIR)
	mkdir $(OBJ_DIR)
	mkdir $(SOURCES_DIR)
	mkdir $(HEADERS_DIR)

clean_exe:
	rm $(BUILD_DIR)/*.exe

clean_obj:
	rm $(OBJ_DIR)/*.o

clean_dump:
	rm dump/*.png
	rm dump/*.dot

clean:
	rm $(BUILD_DIR)
	rm $(OBJ_DIR)

create_obj:
	$(CC) $(SOURCES) $(LIBS_SRC) -I$(HEADERS_DIR) -I$(LIBS) -I$(DSL) -D$(DEBUG)
	mv *.o $(OBJ_DIR)

linkage:
	$(CC) $(OBJECTS) -o $(BUILD_DIR)/$(EXECUTABLE)

compile:
	$(CC) $(SOURCES) $(LIBS_SRC) -I$(HEADERS_DIR) -I$(LIBS) -I$(DSL) -D$(DEBUG) -o $(BUILD_DIR)/$(EXECUTABLE)

run:
	$(BUILD_DIR)/$(EXECUTABLE)
